{"version":3,"sources":["constants/News.js","reducers/news.js","constants/Login.js","utils/index.js","reducers/auth.js","reducers/index.js","store/configureStore.js","components/News.js","actions/LoginActionCreators.js","containers/NewsContainer.js","actions/NewsActionCreators.js","components/Login.js","containers/LoginContainer.js","components/PrivateLogin.js","components/PrivateNews.js","containers/App.js","serviceWorker.js","index.js"],"names":["NEWS_REQUEST","NEWS_FAIL","NEWS_SUCCESS","initialState","articles","error","isFetching","AUTH_LOGIN","AUTH_LOGOUT","AUTH_ERROR","parse","type","JSON","user","isLoggedIn","localStorage","getItem","rootReducer","combineReducers","news","state","action","payload","message","auth","store","createStore","applyMiddleware","thunk","logger","Head","styled","header","ButtonLogout","button","ButtonText","span","Content","div","MainHeader","h1","NewsSection","section","NewsItem","NewsTitle","h2","NewsDescription","p","NewsImage","img","NewsContent","Footer","footer","News","doLogout","onClick","renderHeader","map","item","key","Date","publishedAt","getTime","title","description","src","urlToImage","alt","content","fakeLoginRequest","Promise","resolve","reject","username","password","setItem","dispatch","LoadingMeassage","NewsContainer","getNews","this","props","Fragment","length","React","Component","connect","req","Request","fetch","then","response","json","data","status","slice","catch","e","Error","LoginForm","form","Label","label","InputWrap","Input","input","Button","ErrorMessage","Login","handleChange","currentTarget","id","value","setState","fakeLogin","preventDefault","doLogin","history","isUnknownUser","onSubmit","htmlFor","onChange","LoginContainer","a","userResponse","push","PrivateLogin","component","rest","render","to","pathname","PrivateNews","GlobalStyle","createGlobalStyle","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e16bb4ae.chunk.js","sourcesContent":["export const NEWS_REQUEST = 'NEWS_REQUEST';\r\nexport const NEWS_FAIL = 'NEWS_FAIL';\r\nexport const NEWS_SUCCESS = 'NEWS_SUCCESS';\r\n","import { NEWS_REQUEST, NEWS_SUCCESS, NEWS_FAIL } from '../constants/News';\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  error: '',\r\n  isFetching: false,\r\n};\r\n\r\nexport function news(state = initialState, action) {\r\n  switch (action.type) {\r\n    case NEWS_REQUEST:\r\n      return { ...state, isFetching: true, error: '' };\r\n    case NEWS_SUCCESS:\r\n      return { ...state, isFetching: false, articles: action.payload };\r\n    case NEWS_FAIL:\r\n      return { ...state, isFetching: false, error: action.payload.message };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const AUTH_LOGIN = 'AUTH_LOGIN';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n","export function parse(type) {\r\n  return typeof type == 'string' ? JSON.parse(type) : type;\r\n}\r\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR } from '../constants/Login';\r\nimport { parse } from '../utils';\r\n\r\nconst initialState = {\r\n  user: '',\r\n  isLoggedIn: parse(localStorage.getItem('isLoggedIn')) || false,\r\n  error: '',\r\n};\r\n\r\nexport function auth(state = initialState, action) {\r\n  switch (action.type) {\r\n    case AUTH_LOGIN:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.payload.isLoggedIn,\r\n        user: action.payload.user,\r\n        error: '',\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.payload.isLoggedIn,\r\n      };\r\n    case AUTH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { news } from './news';\r\nimport { auth } from './auth';\r\n\r\nexport const rootReducer = combineReducers({\r\n  news,\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Head = styled.header`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ButtonLogout = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 120px;\r\n  min-width: 60px;\r\n  margin: 26px auto 0;\r\n  padding: 8px 6px;\r\n  border: none;\r\n  outline: none;\r\n  background-color: transparent;\r\n  vertical-align: middle;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: rgba(33, 150, 243, 0.08);\r\n  }\r\n`;\r\nconst ButtonText = styled.span`\r\n  color: rgb(33, 150, 243);\r\n`;\r\nconst Content = styled.div`\r\n  max-width: 1024px;\r\n  margin: 0 auto;\r\n`;\r\nconst MainHeader = styled.h1`\r\n  font-size: 8rem;\r\n`;\r\nconst NewsSection = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;\r\nconst NewsItem = styled.div`\r\n  width: 50%;\r\n  padding: 0 12px;\r\n`;\r\nconst NewsTitle = styled.h2`\r\n  font-size: 2rem;\r\n`;\r\nconst NewsDescription = styled.p`\r\n  font-size: 1.6rem;\r\n`;\r\nconst NewsImage = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\nconst NewsContent = styled.p`\r\n  font-size: 1.8rem;\r\n`;\r\nconst Footer = styled.footer`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nfunction News({ articles, auth, doLogout }) {\r\n  const renderTepmlate = () => {\r\n    return articles.map(item => (\r\n      <NewsItem key={new Date(item.publishedAt).getTime()}>\r\n        <NewsTitle>{item.title}</NewsTitle>\r\n        <NewsDescription>{item.description}</NewsDescription>\r\n        <NewsImage src={item.urlToImage} alt=\"\" />\r\n        <NewsContent>{item.content}</NewsContent>\r\n      </NewsItem>\r\n    ));\r\n  };\r\n  const renderHeader = () => {\r\n    if (auth.isLoggedIn) {\r\n      return (\r\n        <Head>\r\n          <ButtonLogout onClick={doLogout}>\r\n            <ButtonText>Logout</ButtonText>\r\n          </ButtonLogout>\r\n        </Head>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderHeader()}\r\n      <Content>\r\n        <MainHeader>News</MainHeader>\r\n        <NewsSection>{renderTepmlate()}</NewsSection>\r\n      </Content>\r\n      <Footer>vasyaivanovpv, 2019</Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nNews.propTypes = {\r\n  articles: PropTypes.array.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  doLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default News;\r\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR } from '../constants/Login';\r\nimport { parse } from '../utils';\r\n\r\nconst fakeLoginRequest = user =>\r\n  new Promise((resolve, reject) => {\r\n    if (user.username === 'admin' && user.password === '12345') {\r\n      localStorage.setItem('isLoggedIn', true);\r\n      resolve(user);\r\n    } else {\r\n      localStorage.setItem('isLoggedIn', false);\r\n      reject('Nu such user');\r\n    }\r\n  });\r\n\r\nexport const doLogin = (user, history) => async dispatch => {\r\n  try {\r\n    const userResponse = await fakeLoginRequest(user);\r\n    dispatch({\r\n      type: AUTH_LOGIN,\r\n      payload: {\r\n        user: userResponse,\r\n        isLoggedIn: parse(localStorage.getItem('isLoggedIn')),\r\n      },\r\n    });\r\n    history.push('/');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      error: true,\r\n      payload: new Error('Ошибка авторизации'),\r\n    });\r\n    // alert(error);\r\n  }\r\n};\r\n\r\nexport const doLogout = () => {\r\n  return dispatch => {\r\n    localStorage.setItem('isLoggedIn', false);\r\n    dispatch({\r\n      type: AUTH_LOGOUT,\r\n      payload: { isLoggedIn: parse(localStorage.getItem('isLoggedIn')) },\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport News from '../components/News';\r\nimport { connect } from 'react-redux';\r\nimport { getNews } from '../actions/NewsActionCreators';\r\nimport { doLogout } from '../actions/LoginActionCreators';\r\nimport { PropTypes } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadingMeassage = styled.span`\r\n  display: block;\r\n  height: 100px;\r\n  padding-top: 46px;\r\n  text-align: center;\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nclass NewsContainer extends React.Component {\r\n  componentDidMount() {\r\n    const { getNews } = this.props;\r\n    getNews();\r\n  }\r\n\r\n  render() {\r\n    const { articles, isFetching, auth, doLogout } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isFetching && <LoadingMeassage>Loading...</LoadingMeassage>}\r\n        {!isFetching && articles.length === 0 && 'Epmty'}\r\n        {articles.length > 0 && (\r\n          <News articles={articles} auth={auth} doLogout={doLogout} />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nNewsContainer.propTypes = {\r\n  articles: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  getNews: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  doLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  articles: store.news.articles,\r\n  isFetching: store.news.isFetching,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getNews, doLogout }\r\n)(NewsContainer);\r\n","import { NEWS_REQUEST, NEWS_SUCCESS, NEWS_FAIL } from '../constants/News';\r\n\r\nexport function getNews() {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: NEWS_REQUEST,\r\n    });\r\n\r\n    const url =\r\n      'https://newsapi.org/v2/top-headlines?' +\r\n      'sources=bbc-news&' +\r\n      'apiKey=2effadf8ccc44084b59e9dd869560afd';\r\n    const req = new Request(url);\r\n\r\n    fetch(req)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.status === 'ok') {\r\n          dispatch({\r\n            type: NEWS_SUCCESS,\r\n            payload: data.articles.slice(0, 5),\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        dispatch({\r\n          type: NEWS_FAIL,\r\n          error: true,\r\n          payload: new Error(e),\r\n        });\r\n      });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst LoginForm = styled.form`\r\n  max-width: 460px;\r\n  margin: 90px auto;\r\n  padding: 44px 65px;\r\n  background-color: white;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 1px rgba(97, 127, 152, 0.2), 1px 0 0 rgba(97, 127, 152, 0.1),\r\n    -1px 0 0 rgba(97, 127, 152, 0.1);\r\n`;\r\nconst Label = styled.label`\r\n  display: block;\r\n  font-size: 1.4rem;\r\n`;\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  :hover {\r\n    ::before {\r\n      border-bottom: 2px solid rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n  :focus-within {\r\n    ::after {\r\n      transform: scaleX(1);\r\n    }\r\n  }\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    transform: scaleX(0);\r\n    transition: transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n    border-bottom: 2px solid #1976d2;\r\n    pointer-events: none;\r\n  }\r\n  ::before {\r\n    content: '\\\\00a0';\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.4);\r\n    pointer-events: none;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  min-width: 0;\r\n  height: 42px;\r\n  margin-bottom: 20px;\r\n  padding: 0 12px;\r\n  border: none;\r\n  background-color: none;\r\n  font-size: 2.2rem;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 120px;\r\n  min-width: 60px;\r\n  margin: 26px auto 0;\r\n  padding: 8px 6px;\r\n  border: none;\r\n  outline: none;\r\n  background-color: transparent;\r\n  vertical-align: middle;\r\n  text-align: center;\r\n  font-size: 1.6rem;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    background-color: rgba(33, 150, 243, 0.08);\r\n  }\r\n`;\r\nconst ButtonText = styled.span`\r\n  color: rgb(33, 150, 243);\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  min-height: 1em;\r\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\r\n  font-size: 1.3rem;\r\n  color: rgb(244, 67, 54);\r\n`;\r\n\r\nexport default class Login extends React.Component {\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { id, value } = e.currentTarget;\r\n    this.setState({\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  fakeLogin = e => {\r\n    e.preventDefault();\r\n    const { doLogin, history } = this.props;\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    if (!user.username || !user.password) {\r\n      this.setState({\r\n        isUnknownUser: true,\r\n      });\r\n    }\r\n\r\n    doLogin(user, history);\r\n\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { username, password } = this.state;\r\n    const { auth } = this.props;\r\n    return (\r\n      <div>\r\n        <LoginForm onSubmit={this.fakeLogin}>\r\n          <Label htmlFor=\"username\">username</Label>\r\n          <InputWrap>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </InputWrap>\r\n          <Label htmlFor=\"password\">password</Label>\r\n          <InputWrap>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </InputWrap>\r\n          <ErrorMessage>{auth.error && 'Введены неверные данные'}</ErrorMessage>\r\n          <Button>\r\n            <ButtonText>Login</ButtonText>\r\n          </Button>\r\n        </LoginForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  doLogin: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Login from '../components/Login';\r\nimport { connect } from 'react-redux';\r\nimport { doLogin, doLogout } from '../actions/LoginActionCreators';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass LoginContainer extends React.Component {\r\n  render() {\r\n    const { doLogin, doLogout, history, auth } = this.props;\r\n    return (\r\n      <Login\r\n        doLogin={doLogin}\r\n        doLogout={doLogout}\r\n        history={history}\r\n        auth={auth}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLoginContainer.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  doLogin: PropTypes.func.isRequired,\r\n  doLogout: PropTypes.func.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { doLogin, doLogout }\r\n)(LoginContainer);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateLogin = ({ component: Component, auth, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        auth.isLoggedIn ? (\r\n          <Component auth={auth} {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: '/login' }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateLogin;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateNews = ({ component: Component, auth, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        auth.isLoggedIn ? (\r\n          <Redirect to={{ pathname: '/' }} />\r\n        ) : (\r\n          <Component auth={auth} {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateNews;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport NewsContainer from './NewsContainer';\r\nimport LoginContainer from './LoginContainer';\r\nimport PrivateLogin from '../components/PrivateLogin';\r\nimport PrivateNews from '../components/PrivateNews';\r\nimport { connect } from 'react-redux';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  html {\r\n    font-size: 10px;\r\n  }\r\n  body {\r\n    background-color: rgb(246,246,246);\r\n  }\r\n`;\r\n\r\nconst App = ({ auth }) => (\r\n  <Router>\r\n    <GlobalStyle />\r\n    <Switch>\r\n      {/* <Route path=\"/login\" component={LoginContainer} /> */}\r\n      <PrivateLogin exact path=\"/\" component={NewsContainer} auth={auth} />\r\n      <PrivateNews exact path=\"/login\" component={LoginContainer} auth={auth} />\r\n\r\n      <Route component={() => <div>No such page!</div>} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nconst mapStateToProps = store => ({\r\n  auth: store.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/configureStore';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}